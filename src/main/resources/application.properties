#
# debug=true
#
#logging 設定
logging.level.org.springframework=WARN
logging.level.jp.co.stnet.cms.base.infrastructure.mapper=DEBUG
logging.level.jp.co.stnet.cms.example.infrastructure.mapper=DEBUG
#
spring.thymeleaf.cache=false
spring.resources.cache.cache-period=0
# logging.level.org.thymeleaf=TRACE
# logging.level.org.springframework.boot=TRACE
#
# Dev-Tools
spring.devtools.restart.poll-interval=1201
spring.devtools.restart.quiet-period=900
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true

#
# DataBase接続設定
spring.datasource.platform=postgresql
spring.datasource.url=jdbc:postgresql://localhost:5432/cms?currentSchema=cms
spring.datasource.username=admin
spring.datasource.password=admin
spring.datasource.driverClassName=org.postgresql.Driver
#
# liquibaseの状態
spring.liquibase.enabled=false
#
# ロックアウトの継続時間(秒)
security.lockingDurationSeconds=3
# ロックアウトするまでの認証失敗回数
security.lockingThreshold=3
# パスワードの有効期間(秒)
security.passwordLifeTimeSeconds=1000000
#security.passwordLifeTimeSeconds=1
# パスワード再発行トークンの有効期間(秒)
security.tokenLifeTimeSeconds=300
# パスワード再発行の失敗回数の上限値
security.tokenValidityThreshold=3
# 新規パスワードの強度(最低文字数)
security.passwordMinimumLength=4
# 新規パスワードの強度(パスワードの再利用制限(過去何回分))
security.passwordHistoricalCheckingCount=3
# 新規パスワードの強度(パスワードの再利用制限(変更からの経過時間(秒)))
security.passwordHistoricalCheckingPeriod=180
# 再発行トークンの削除タイミング(秒間隔)　・・・・要確認
security.reissueInfoCleanupSeconds=180
# テンポラリファイルの削除タイミング(秒間隔)　・・・・要確認
security.tempFileCleanupSeconds=60

# メールサーバ接続設定
mail.host=localhost
mail.port=1025
mail.from=info@example.com
mail.subject=Password Reissue URL

# パスワードリセットメール用
app.host=localhost
app.port=8080
app.contextPath=/
app.passwordReissueProtocol=http

# File Store
file.store.basedir=uploadfile
file.store.default_file_type=default

#AutoConfigが準備するBeanの上書きを許可
spring.main.allow-bean-definition-overriding=true

# 起動時のジョブ実行を停止
spring.batch.job.enabled=false

# ログファイル出力先
logging.file.name=/log/cms.log
job.log.dir=/log/job

# File Upload
spring.servlet.multipart.max-file-size=256MB
spring.servlet.multipart.max-request-size=256MB
spring.servlet.multipart.enabled=true