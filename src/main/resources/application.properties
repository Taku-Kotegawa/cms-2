#
# SpringBoot標準プロパティ一覧
# https://spring.pleiades.io/spring-boot/docs/current/reference/html/application-properties.html
#
# SpringBootの起動プロセスの詳細ログを出力
#debug=true
#
# DIの遅延登録
# spring.main.lazy-initialization=true
#
# キャッシュを無効化
spring.thymeleaf.cache=false
spring.resources.cache.cache-period=0
#
# DevTools設定
spring.devtools.restart.poll-interval=1201
spring.devtools.restart.quiet-period=900
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true
#
# --- ここまではローカル開発環境に必要な設定 ----
#
#
### logging 設定
# ログファイル出力先
logging.file.name=log/cms.log
# ジョブログの出力先
job.log.dir=log/job
# logging.level.org.springframework=WARN
logging.level.jp.co.stnet.cms.base.infrastructure.mapper=DEBUG
logging.level.jp.co.stnet.cms.example.infrastructure.mapper=DEBUG
logging.level.org.terasoluna.gfw.common.exception.ExceptionLogger=INFO
# logging.level.org.thymeleaf=TRACE
# logging.level.org.springframework.boot=TRACE
#
# DataBase接続設定
spring.datasource.url=${ENV_SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/cms?currentSchema=cms}
spring.datasource.username=${ENV_SPRING_DATASOURCE_USERNAME:admin}
spring.datasource.password=${ENV_SPRING_DATASOURCE_PASSWORD:admin}
spring.datasource.platform=postgresql
spring.datasource.driverClassName=org.postgresql.Driver
#
# liquibaseの状態
spring.liquibase.enabled=false
#
# 認証機能の設定
# ロックアウトの継続時間(秒)
security.lockingDurationSeconds=3
# ロックアウトするまでの認証失敗回数
security.lockingThreshold=3
# パスワードの有効期間(秒)
security.passwordLifeTimeSeconds=1000000
# パスワード再発行トークンの有効期間(秒)
security.tokenLifeTimeSeconds=300
# パスワード再発行の失敗回数の上限値
security.tokenValidityThreshold=3
# 新規パスワードの強度(最低文字数)
security.passwordMinimumLength=4
# 新規パスワードの強度(パスワードの再利用制限(過去何回分))
security.passwordHistoricalCheckingCount=3
# 新規パスワードの強度(パスワードの再利用制限(変更からの経過時間(秒)))
security.passwordHistoricalCheckingPeriod=180
# 再発行トークンの削除タイミング(秒間隔)　・・・・要確認
security.reissueInfoCleanupSeconds=180
# テンポラリファイルの削除タイミング(秒間隔)　・・・・要確認
security.tempFileCleanupSeconds=60
# パスワード再設定メールの送信者
mail.from=${ENV_MAIL_FROM:info@example.com}
# パスワード再設定メールの件名
mail.subject=${ENV_MAIL_SUBJECT:Password Reissue URL}
#
# メールサーバ接続設定
spring.mail.host=${ENV_SPRING_MAIL_HOST:localhost}
spring.mail.port=${ENV_SPRING_MAIL_PORT:1025}
#
# パスワードリセットメールに記載される接続先
app.host=${ENV_APP_HOST:localhost}
app.port=${ENV_APP_PORT:8080]
app.contextPath=${ENV_CONTEXT_PATH:/}
app.passwordReissueProtocol=${ENV_APP_PASSWORD_REISSUE_PROTOCOL:http}
#
# File Store
file.store.basedir=uploadfile
file.store.default_file_type=default
#
# AutoConfigが準備するBeanの上書きを許可
spring.main.allow-bean-definition-overriding=true
#
# 起動時のジョブ実行を停止
spring.batch.job.enabled=false
#
#
# File Upload
spring.servlet.multipart.max-file-size=256MB
spring.servlet.multipart.max-request-size=256MB
spring.servlet.multipart.enabled=true
#
# Cache
spring.cache.caffeine.spec=maximumSize=10, expireAfterWrite=600s
#
# MyBatis Config
# https://mybatis.org/spring-boot-starter/mybatis-spring-boot-autoconfigure/
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.callSettersOnNulls=true
mybatis.configuration.return-instance-for-empty-row=true
#mybatis.lazy-initialization=true
#
# Terasoluna Auto Configuration
spring.thymeleaf.check-template-location=false
terasoluna.exception.code-mappings.ResourceNotFound=e.xx.fw.5001
terasoluna.exception.code-mappings.InvalidTransactionTokenException=e.xx.fw.xxxx
terasoluna.exception.code-mappings.BusinessException=e.xx.fw.xxxx
terasoluna.exception.code-mappings.DataAccessException=e.xx.fw.xxxx
terasoluna.exception.code-mappings.HttpSessionRequiredException=e.xx.fw.xxxx
#terasoluna.exception.code-mappings.RuntimeException=e.xx.fw.9002
terasoluna.exception.logging-advisor-enabled=true
terasoluna.mvc.enabled=true
#
# システム時刻のカスタマイズ(type = current(コンピュータの時刻)|fix(固定値)|adjusted(一致時刻スライド))
local-datetime-factory.type=current
local-datetime-factory.fix-timestamp-query=SELECT now FROM system_date
local-datetime-factory.adjusted-value-query=SELECT diff * 60 * 1000 FROM operation_date
# DB操作をキャッシュするか
local-datetime-factory.use-cache=false
#
# スケジュール
ScheduleTest.enabled=true
ScheduleTest.initialDelay=5000
ScheduleTest.fixedDelay=1000
